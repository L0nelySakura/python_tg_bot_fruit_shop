from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from internal.handlers.director import ask_director_password
from internal.keyboards.common_kb import get_main_menu
from internal.handlers.sales_rep import ask_rep_month

router = Router()


@router.message(Command("start"))
async def start_handler(message: Message):
    kb = get_main_menu()
    await message.answer("""
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>
–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:
üëî <b>–î–∏—Ä–µ–∫—Ç–æ—Ä</b> - –≤–≤–æ–¥ –ø—Ä–æ–¥–∞–∂.
üõí <b>–¢–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å</b> - –≤—ã–≤–æ–¥ –ø–ª–∞–Ω–∞ –ø—Ä–æ–¥–∞–∂.
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.
""",
                         reply_markup=kb,
                         parse_mode="HTML")


@router.callback_query(lambda c: c.data == "director")
async def director_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await ask_director_password(callback.message, state)


@router.callback_query(lambda c: c.data == "representative")
async def rep_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await ask_rep_month(callback.message, state)
